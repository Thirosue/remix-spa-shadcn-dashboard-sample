import{r as a,j as d}from"./jsx-runtime-BoP3Okkf.js";import{p as m,l as r,d as k}from"./logger-B_ZFLNfA.js";const S={session:null,updateSession:n=>{},clearSession:()=>{}},c=a.createContext(S),p=async()=>{const n=sessionStorage.getItem("refreshToken");if(!n)return{status:"error"};try{const{status:t,token:o}=await m("/api/auth/refreshTokenCheck",{},{"X-Refresh-Token":n});return{status:t,token:o}}catch(t){return r({message:"Failed to refresh token",object:t}),{status:"error"}}},y=({children:n})=>{const[t,o]=a.useState(null),i=s=>{try{return JSON.parse(atob(s.split(".")[1]))}catch(e){return r({message:"Failed to decode token",object:e}),null}},u=async()=>{try{const{status:s,token:e}=await p();if(s==="ok"&&e){const f=i(e);o({name:"John Doe",email:f.email,image:"https://avatars.githubusercontent.com/u/14899056?v=4",token:e}),r({message:"Refreshed token",object:{token:e}})}}catch(s){r({message:"Failed to refresh token",object:s}),o(null)}};a.useEffect(()=>{r({message:"SessionProvider mounted"}),u()},[]);const l=async()=>{try{await k("/api/auth/signout")}finally{o(null),sessionStorage.removeItem("refreshToken")}},h=s=>{if(s){const e={...t,...s};o(e),sessionStorage.setItem("refreshToken",e.refreshToken)}};return d.jsx(c.Provider,{value:{session:t,updateSession:h,clearSession:l},children:n})},x=()=>a.useContext(c);export{y as S,p as c,x as u};
